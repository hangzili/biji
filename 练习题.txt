1、查询"01"课程比"02"课程成绩高的学生的信息及课程分数 
	select * from student st inner join score sc on st.s_id = sc.s_id and sc.c_id="01" join score sc_2 on st.s_id = sc_2.s_id and sc_2.c_id="02" and sc.s_score > sc_2.s_score;
2、查询"01"课程比"02"课程成绩低的学生的信息及课程分数
	select * from student st inner join score sc on st.s_id = sc.s_id and sc.c_id="01" join score sc_2 on st.s_id = sc_2.s_id and sc_2.c_id="02" and sc.s_score < sc_2.s_score;
3、查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩
	select a.s_id,b.s_name,avg(a.s_score) from score a join student b where (select avg(a.s_score) from score) >= 60 and a.s_id = b.s_id group by b.s_id;

4、查询平均成绩小于60分的同学的学生编号和学生姓名和平均成绩
	select a.*,avg(a.s_score) from score a join student b on (select avg(a.s_score) from score) < 60 and a.s_id = b.s_id group by b.s_id;
5、查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩
 	select * from student inner join (select count(s_id) as total,s_id,sum(s_score) sum  from score group by s_id) tmp on
 	student.s_id = tmp.s_id;
6、查询"李"姓老师的数量
	select count(*) from teacher where t_name like "李%";
7、查询学过"张三"老师授课的同学的信息 
	select st.* from score sc inner join student st on st.s_id = sc.s_id and sc.c_id = (select co.c_id from course co inner join teacher te on co.t_id = te.t_id and te.t_name = "张三");
8、查询没学过"张三"老师授课的同学的信息 
	select st.* from score sc inner join student st on st.s_id = sc.s_id and sc.c_id in (select co.c_id from course co inner join teacher te on co.t_id = te.t_id and te.t_name <> "张三");
9、查询学过编号为"01"并且也学过编号为"02"的课程的同学的信息
	select * from student where s_id in (select s_id from score where s_id in (select s_id from score where c_id = 01) and c_id = 02);
10、查询学过编号为"01"但是没有学过编号为"02"的课程的同学的信息
	 select * from student where s_id not in (select s_id from score where c_id = 02) and s_id in (select s_id from score where c_id = 01);
11、查询没有学全所有课程的同学的信息
	select * from student st inner join (select count(c_id) as num,s_id from score group by s_id having num != (select count(c_id) from course)) s on st.s_id=s.s_id;
12、查询至少有一门课与学号为"01"的同学所学相同的同学的信息
	select * from student st inner join ( select sc.s_id from score sc inner join ( select * from score where s_id = 01) s on sc.c_id in (s.c_id)) s on st.s_id in (s.s_id);
13、查询和"01"号的同学学习的课程完全相同的其他同学的信息 
	select count(*) num,st.s_id from student st inner join score sc on st.s_id = sc.s_id group by st.s_id having st.s_id!= 01 and num=(select count(*) from score where s_id="01");
14、查询没学过"张三"老师讲授的任一门课程的学生姓名
	select s_name from student where s_id not in (select s_id from score where c_id = (select c_id from course where t_id = (select t_id from teacher where t_name = "张三")));
15、查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩 
	select a.s_id,a.s_name,round(avg(b.s_score)) from student a left join score b on a.s_id = b.s_id where a.s_id in( select s_id from score where s_score<60 group by s_id having count(1)>= 2) group by a.s_id,a.s_name
16、检索"01"课程分数小于60，按分数降序排列的学生信息
	 select st.* from student st inner join score sc where sc.c_id = 01 and sc.s_score < 60 and st.s_id = sc.s_id order by sc.s_score;
17、按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩
	 select *,avg(s_score) as av from score group by s_id order by av;
18、查询每门课程被选修的学生数
	 select c_id,count(s_id) from score group by c_id;
19、查询出只有两门课程的全部学生的学号和姓名 
	select s_name,s_id from student where s_id in (select s_id from score group by s_id having count(c_id) = 2);
20、查询男生、女生人数
	select sex,count(*) from student group by s_sex;
21、查询名字中含有"风"字的学生信息
	select * from student where s_name like "%风%"